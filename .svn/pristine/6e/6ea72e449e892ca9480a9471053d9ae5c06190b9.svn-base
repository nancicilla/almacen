<?php

/*
 * WSNotaborradorController.php
 *
 * Version 0.$Rev: 204 $
 *
 * Creacion: 17/03/2015
 *
 * Ultima Actualizacion: $Date: 2015-05-19 15:24:15 -0400 (Tue, 19 May 2015) $:
 * 
 * Copyright 2015 SOLUR SRL.
 * Monteagudo esq. Los Sauces, Sucre, Bolivia.
 * Todos los derechos reservados.
 *
 * Este software es información confidencial y de propiedad de SOLUR SRL.
 * Usted no podrá divulgar dicha Información Confidencial y la utilizará 
 * únicamente de acuerdo con los términos del acuerdo de licencia con SOLUR SRL.
 */

class WSNotaborradorController extends CController {

    public function actions() {
        return array(
            'notaborrador' => array(
                'class' => 'CWebServiceAction',
                'classMap' => 'Notaborrador'
            ),           
            'notaBorradorIngresoSalidaAlmacen' => array(// url
                'class' => 'CWebServiceAction',
                'classMap' => 'registrarNotaBorradorIngresoSalidaAlmacen' // funcion
            ),
            'UrlAnulacionBorrador' => array(// url
                'class' => 'CWebServiceAction',
                'classMap' => 'anulacionBorrador' // funcion
            ),
            'notaborradoranular' => array(
                'class' => 'CWebServiceAction',
                'classMap' => 'anularNotaBorrador'
            ),
            'conexionalmacen' => array(
                'class' => 'CWebServiceAction',
                'classMap' => 'wsprueba'
            ),
            'registrarSalidaInsumoAdicional' => array(
                'class' => 'CWebServiceAction',
                'classMap' => 'registrarSalidaInsumoAdicional'
            ),
        );
    }

    /**
     * prueba
     * @param string $dato
     * @return string
     * @soap
     */
    public function wsprueba($dato) {
        return "hola " . $dato;
    }


    /**
     * Registra una nota borrador en el almacen de produccion
     * @param integer $norden
     * @param array $datosalmacen
     * @param array $arrayProducto
     * @param string $nomb
     * @param integer $identif
     * @return integer
     * @soap
     */
    public function registrarNotaBorradorIngresoSalidaAlmacen($norden, $datosalmacen, $arrayProducto, $nomb, $identif) {
        $respuestaws = -1;

        $model = new Notaborrador;
        $model->setScenario('produccion');
        $model->idalmacen = $datosalmacen['idalmacen'];
        $idAlmacenProductosEnProceso = Almacen::model()->idAlmacenProductosEnProceso;
        //$model->idcontracuenta = Almacen::model()->findBySql('select idcuenta from almacen where id = ' . $idAlmacenProductosEnProceso)->idcuenta;
        $model->idcontracuenta = $datosalmacen['idcontracuenta'];
        $model->scenario = 'miUsuario';
        Yii::app()->session['var'] = $nomb;
        $glosa = 'SALIDA PARA O.P. Nº ' . $norden . ' - ' . $datosalmacen['producto'];
        $model->glosa = $glosa;
        $model->idtipo = Tipo::model()->SALIDA;
        $model->idtipodocumento = Tipodocumento::model()->ORDEN_PRODUCCION;
        $model->idorigen = Origen::model()->idOrigenProduccion;
        $model->numero = Notaborrador::model()->generarNumero();
        $model->iddocumento = $identif;

        if ($model->save()) {
            $cantidad = count($arrayProducto);
            for ($index = 0; $index < $cantidad; $index++) {
                $modelProductonotaborrador = new Productonotaborrador;
                $modelProductonotaborrador->scenario = 'miUsuario';
                $modelProductonotaborrador->glosa = $glosa;
                $modelProductonotaborrador->ingreso = 0;
                $modelProductonotaborrador->salida = round($arrayProducto[$index]['cantidad'], 4);
                $modelProductonotaborrador->idproducto = $arrayProducto[$index]['id'];
                $modelProductonotaborrador->idnotaborrador = $model->id;
                if (!$modelProductonotaborrador->save()) {
                    $error = 'No se registró producto nota borrador: numero nota borrador ' . $model->numero;
                    throw new CException($error);
                }
            }
            unset(Yii::app()->session['var']);
            $respuestaws = $model->id;
        } else {
            $error = 'No se registró la nota borrador';
            throw new CException($error);
        }
        return $respuestaws;
    }
    
    /**
     * 
     * @param integer $norden
     * @param array $datosalmacen
     * @param array $arrayProducto
     * @param string $usuario
     * @param integer $identificador
     * @return integer
     * @soap
     */
    public function registrarSalidaInsumoAdicional($norden, $datosalmacen, $arrayProducto, $usuario, $identificador) {
        $respuesta = -1;
        $idAlmacenProductosEnProceso = Almacen::model()->idAlmacenProductosEnProceso;
        $modelborrador = new Notaborrador;
        $modelborrador->scenario = 'produccion';
        $modelborrador->idalmacen = $datosalmacen['idalmacen'];
        $modelborrador->idcontracuenta = Almacen::model()->find('id = ' . $idAlmacenProductosEnProceso)->idcuenta; 
        $modelborrador->scenario = 'miUsuario';
        Yii::app()->session['var'] = $usuario;
        $glosa = 'SALIDA AD. PARA O.P. Nº ' . $norden . ' - ' . $datosalmacen['producto'];
        $modelborrador->glosa = $glosa;
        $modelborrador->idtipo = Tipo::model()->SALIDA;
        $modelborrador->idtipodocumento = Tipodocumento::model()->ORDEN_PRODUCCION;
        $modelborrador->idorigen = Origen::model()->idOrigenProduccion;
        $modelborrador->numero = Notaborrador::model()->generarNumero();
        $modelborrador->iddocumento = $identificador;
        if ($modelborrador->save()) {
            $cantidad = count($arrayProducto);
            for ($i = 0; $i < $cantidad; $i++) {
                $modelProductonotaborrador = new Productonotaborrador;
                $modelProductonotaborrador->scenario = 'miUsuario';
                $modelProductonotaborrador->glosa = $glosa;
                $modelProductonotaborrador->ingreso = 0;
                $modelProductonotaborrador->salida = round($arrayProducto[$i]['cantidad'], 4);
                $modelProductonotaborrador->idproducto = $arrayProducto[$i]['id'];
                $modelProductonotaborrador->idnotaborrador = $modelborrador->id;
                if (!$modelProductonotaborrador->save()) {
                    $error = 'No se registró producto nota borrador: numero nota borrador ' . $modelborrador->numero;
                    throw new CException($error);
                }
            }
            unset(Yii::app()->session['var']);
            $respuesta = $modelborrador->id;
            $idnota = Nota::model()->registrarSalidaInsumoAdicional($norden, $datosalmacen, $arrayProducto, $usuario, $modelborrador->id);
        } else {
            $error = 'No se registró la nota borrador';
            throw new CException($error);
        }
        return $respuesta;
    }

    /**
     * Anulacion borrador
     * @param array $arrayParametro
     * @soap
     */
    public function anulacionBorrador($arrayParametro) {
        $notaBorrador = Notaborrador::model()->findAll('iddocumento = ' . $arrayParametro['iddocumento']);
        $modelNotaBorrador = array();

        if ($notaBorrador != null) {
            for ($fila = 0; $fila < count($notaBorrador); $fila++) {
                $modelNotaBorrador = Notaborrador::model()->findByPk($notaBorrador[$fila]['id']);
                $modelNotaBorrador->idestado = Estado::model()->idEstadoAnulado; // ANULADO
                $modelNotaBorrador->fecha = date('d-m-Y');
                $modelNotaBorrador->save();
            }
        }
    }

    /**
     * Anula Nota Borrador
     * @param integer $id
     * @param string $nomb
     * @soap
     */
    public function anularNotaBorrador($id, $nomb) {
        $model = Notaborrador::model()->findBySql('select * from notaborrador where id = ' . $id);
        $model->setScenario('anular');
        Yii::app()->session['var'] = $nomb;
        $model->idestado = Estado::model()->idEstadoAnulado;
        $model->fecha = date('d-m-Y');
        if (!$model->save()) {
            echo System::hasErrors('Error al realizar el proceso! ', $model);
            return;
        };
        unset(Yii::app()->session['var']);
    }

}
