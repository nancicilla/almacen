<?php

/*
 * Pedidos.php
 *
 * Version 0.$Rev: 244 $
 *
 * Creacion: 09/11/2015
 *
 * Ultima Actualizacion: $Date: 2015-03-17 10:26:19 -0400 (mar, 17 mar 2015) $:
 * 
 * Copyright 2015 SOLUR SRL.
 * Monteagudo esq. Los Sauces, Sucre, Bolivia.
 * Todos los derechos reservados.
 *
 * Este software es información confidencial y de propiedad de SOLUR SRL.
 * Usted no podrá divulgar dicha Información Confidencial y la utilizará 
 * únicamente de acuerdo con los términos del acuerdo de licencia con SOLUR SRL.

 * This is the model class for table "pedidos".
 *
 * The followings are the available columns in table 'pedidos':
 * @property integer $id
 * @property integer $numero
 * @property string $fecha
 * @property string $nombre
 * @property string $nombrecliente
 * @property string $almacen
 * @property integer $idalmacen
 * @property boolean $almacenconfirm
 */

class Pedidos extends CActiveRecord {
    public $idproducto;
    public $producto;
    
    public $fechaInicio;
    public $fechaFin;

    /**
     * @return string the associated database table name
     */
    public function tableName() {
        return 'pedidos';
    }

    public function primaryKey() {
        return 'id';
    }

    /**
     * @return array validation rules for model attributes.
     */
    public function rules() {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('id, numero, idalmacen', 'numerical', 'integerOnly' => true),
            array('nombre, almacen', 'length', 'max' => 50),
            // The following rule is used by search().
            // @todo Please remove those attributes that should not be searched.
            array('usuario,fechainicio,fechafin,id, numero, fecha, nombre, nombrecliente, almacen, idalmacen, almacenconfirm,idproducto', 'safe', 'on' => 'search'),
            array('fechaInicio', 'type', 'type' => 'date', 'message' => 'Fecha inicio no es una fecha válida.', 'dateFormat' => Yii::app()->locale->getDateFormat('medium')),
            array('fechaFin', 'type', 'type' => 'date', 'message' => 'Fecha fin no es una fecha válida.', 'dateFormat' => Yii::app()->locale->getDateFormat('medium')),
            array('fechaFin', 'compareDateRange', 'type' => 'date', 'message' => 'Fecha fin no es una fecha válida.', 'dateFormat' => Yii::app()->locale->getDateFormat('medium')),
        );
    }

    /**
     * @return array relational rules.
     */
    public function relations() {
        // NOTE: you may need to adjust the relation name and the related
        // class name for the relations automatically generated below.
        return array(
            'idalmacen0' => array(self::BELONGS_TO, 'Almacen', 'idalmacen'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'id' => 'ID',
            'numero' => 'Nº',
            'fecha' => 'Fecha',
            'nombre' => 'Estado',
            'nombrecliente' => 'Cliente',
            'almacen' => 'Almacén',
            'idalmacen' => 'Almacén',
            'almacenconfirm' => 'Confirmado',
            'usuario'=> 'Usuario'
        );
    }

    /**
     * Retrieves a list of models based on the current search/filter conditions.
     *
     * Typical usecase:
     * - Initialize the model fields with values from filter form.
     * - Execute this method to get CActiveDataProvider instance which will filter
     * models according to data in model fields.
     * - Pass data provider to CGridView, CListView or any similar widget.
     *
     * @return CActiveDataProvider the data provider that can return the models
     * based on the search/filter conditions.
     */
    public function search() {
        // @todo Please modify the following code to remove attributes that should not be searched.
        $criteria = new CDbCriteria;

        if ($this->validate()) {
            $criteria->compare('t.id', $this->id);
            $criteria->compare('t.numero', $this->numero);
            $criteria->compare('t.nombre', $this->nombre);
            $criteria->addSearchCondition('t.usuario', $this->usuario, true, 'AND', 'ILIKE');
            $criteria->addSearchCondition('t.nombrecliente', $this->nombrecliente, true, 'AND', 'ILIKE');
            if ($this->fechaInicio != Null) {
                if ($this->fechaFin == Null) {
                    $this->fechaFin = new CDbExpression('NOW()');
                }
                $criteria->addCondition("t.fecha::date BETWEEN '$this->fechaInicio' AND '$this->fechaFin'");
            }
            if($this->idproducto!=null){
                $criteria->addCondition("t.id in (select idpedido from ventapedidoproducto where idproducto=".$this->idproducto." and idpedido=t.id and eliminado=false)");
            }
        } else {
            $criteria->compare('t.id', -1);
        }

//        $criteria->compare('t.id', $this->id);
//        $criteria->compare('t.numero', $this->numero);
//        if ($this->fecha != Null) {
//            $criteria->addCondition("t.fecha::date = '" . $this->fecha . "'");
//        }
//        $criteria->addSearchCondition('t.nombre', $this->nombre, true, 'AND', 'ILIKE');
//        $criteria->addSearchCondition('t.almacen', $this->almacen, true, 'AND', 'ILIKE');
//        $criteria->compare('t.idalmacen', $this->idalmacen);
//        $criteria->compare('t.almacenconfirm', $this->almacenconfirm);

        return new CActiveDataProvider($this, array(
            'pagination' => array(
                'pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize']),
            ),
            'criteria' => $criteria,
            'sort' => array(
                'defaultOrder' => 't.numero desc',
//                'attributes' => array(
//                    'cliente' => array(
//                        'asc' => 'idcliente0.nombre',
//                        'desc' => 'idcliente0.nombre DESC',
//                    ),
//                    'idestado' => array(
//                        'asc' => 'es.nombre',
//                        'desc' => 'es.nombre DESC',
//                    ),
//                    '*',
//                ),
            ),
        ));
    }

    /**
     * @return CDbConnection the database connection used for this class
     */
    public function getDbConnection() {
        return Yii::app()->venta;
    }

    /**
     * Returns the static model of the specified AR class.
     * Please note that you should have this exact method in all your CActiveRecord descendants!
     * @param string $className active record class name.
     * @return Pedidos the static model class
     */
    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    /**
     *
     * Sentencias entes de ejecutar metodo save
     * Antes de guardar se cambia todos los campos  de tipo character
     * varying y text a mayúsculas
     * Si existe el campo fecha, este toma el valor de la fecha actual antes
     * de almacenarse
     * Si existe el campo usuario, toma el valor del usuario actual antes de
     * almacenarse
     * 
     */
    public function beforeSave() {        
        return parent::beforeSave();
    }

    /**
     *
     * Sirve para comparar un rango de fechas, verifica que la fecha posterior
     * sea mayor a la fecha inicial, de no ser asi, se añade un error
     * 
     */
    public function compareDateRange($attribute, $params) {
        if (!empty($this->fechaFin)) {
            if (strtotime($this->fechaFin) < strtotime($this->fechaInicio)) {
                $this->addError($attribute, 'Fecha fin no puede ser menor a la fecha de inicio.');
            }
        }
    }
    
    /**
     *
     * Verifica si un producto tiene productos faltantes
     * 
     */
    public function getVerificarPedidoProductoFaltante() {
        
        $connection = Yii::app()->venta;
        $q="select * from ventapedidoproducto where "
                . "idpedido=".$this->id." and eliminado=false and "
                . "faltante is not null ";
        
        
        if($this->idestado==10){
            $q="select * from ventapedidoproducto where "
                . "idpedido=".$this->id." and eliminado=false and "
                . "faltante is not null  and tieneordenproduccion=true";
            
        
        }
        
        $command = $connection->createCommand($q);
        $tabla = $command->query();
        return sizeof($tabla)>0?1:0;      
    }

}
