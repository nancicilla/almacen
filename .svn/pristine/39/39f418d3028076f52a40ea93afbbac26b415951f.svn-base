
var Producto = new Object();
Producto.__proto__ = SystemWindow;
//variables
Producto.nameView = "Producto";
Producto.url = "producto";
Producto.idAlmacenSelec = "";
Producto.correccion=false;

Producto.init = function () {
    try {
        var THIS = this;
        Producto.indexCaracteristicaAnterior = null;
        Producto.valorOculto = null;
        $('#' + Producto.Id('nutricional')).prop('disabled', true);
        
        if (this.action === 'update') {
            this.buttonChange({id: 'save', label: 'Guardar', key: 'G'});
            
            $('#' + Producto.Id('imagenes')).click(function() { 
                $('select[name^="Productoimagen"]').each(function() {
                    $('#' + this.id).prop('disabled',  false);
                });
            });
        }
        if (this.action === 'create')
        {
            this.buttonChange({id: 'save', label: 'Registrar', key: 'R'});
            if (Producto.idAlmacenSelec !== "") {
                $('#' + this.Id("codigoAlmacen")).val(Producto.idAlmacenSelec);
            }
            
            $('#' + this.Id('codigoAlmacen')).change(function() {
                Producto.actualizaCaracteristicas($(this).val());
            });
        }
        
        if(this.action === 'create' || this.action === 'update')
        {
            $('#' + Producto.Id('aumentarColumna')).attr('disabled', false);
            $('#' + Producto.Id('aumentarColumna')).click(function() {
                if($('#' + Producto.Id('aumentarColumna')).prop('checked') == true)
                    Producto.mostrarRequisitos(true);
                else
                    Producto.mostrarRequisitos(false);
            });
        }
        
        if (this.action === 'InventariarPorAlmacen') {
            $('#' + this.Id("idalmacen")).change(function(){
                Producto.reload('idalmacen='+this.value);
            });
        }
        
        if(this.action === 'Movimientos')
        {
            Producto.WindowTitle('PRODUCTO: ' + $('#' + Producto.Id('nombre')).val());
            Producto.correccion=false;
            var grid = Producto.getSGridView('ProductonotaValorado');
            var contadorSaldoCantidadErrores = 0;
            var contadorSaldoCantidadNegativos = 0;
            var contadorSaldoImporteErrores = 0;
            var contadorSaldoImporteNegativos = 0;
            for(var f = 1; f <= grid.rows; f++)
            {
                var saldo = grid.row(f).get('saldo');
                var saldoCantidadCorrecto = grid.row(f).get('saldoCantidadCorrecto');
                
                if(saldo == saldoCantidadCorrecto)
                {
                    if(saldo >= 0)
                        grid.row(f).attributes('saldo', {'style': {'background': '#d8e4bc'}});
                    else
                    {
                        grid.row(f).attributes('saldo', {'style': {'background': '#F48484'}});
                        contadorSaldoCantidadNegativos++;
                    }
                }
                else
                {
                    grid.row(f).attributes('saldo', {'style': {'background': '#F93838', 'color': 'white'}});
                    contadorSaldoCantidadErrores++;
                }

                var saldoimporte = grid.row(f).get('saldoimporte');
                var saldoImporteCorrecto = grid.row(f).get('saldoImporteCorrecto');
                if(saldoimporte == saldoImporteCorrecto)
                {
                    if(saldoimporte >= 0)
                        grid.row(f).attributes('saldoimporte', {'style': {'background': '#d8e4bc'}});
                    else
                    {
                        grid.row(f).attributes('saldoimporte', {'style': {'background': '#F48484'}});
                        contadorSaldoImporteNegativos++;
                    }
                }
                else
                {
                    grid.row(f).attributes('saldoimporte', {'style': {'background': '#F93838', 'color': 'white'}});
                    contadorSaldoImporteErrores++;
                }
            }
            $('#' + Producto.Id('lblInformacion')).html(
                '<div class="column">' +
                    '<label style="color: #880707; font-size: 15px;">ERRORES DE SALDO: ' + contadorSaldoCantidadErrores + '</label>' + 
                    '<label style="color: #880707; font-size: 15px;">SALDO(S) NEGATIVOS: ' + contadorSaldoCantidadNegativos + '</label>' + 
                '</div>' + 
                '<div class="column" style="width: 2px;">' +
                    '<label style="color: transparent;">.</label>' +
                '</div>' + 
                '<div class="column">' +
                    '<label style="color: #880707; font-size: 15px;">ERRORES SALDO IMPORTE: ' + contadorSaldoImporteErrores + '</label>' +
                    '<label style="color: #880707; font-size: 15px;">SALDO(S) IMPORTE(S) NEGATIVO(S): ' + contadorSaldoImporteNegativos + '</label>' +
                '</div>'
            );
            $('#' + Producto.Id('imagenLoading')).hide();
            return;
        }
    } catch (err) {
        alert('Error al cargar Producto.init()');
    }
    //para el caso de actualizaci√≥n deshabilita los clonnable-fields iniciales
    if ($('#' + this.Id("codigo")).val() !== "") {
        if ($('#' + this.Id("existeImagen")).val() !== 'false') {
            $('#' + this.idWindow + 'container').find(".clonnable-field-1").each(function () {
                if (this.id !== "imagen_Productoimagen_0_idcaracteristica") {
                    $(this).prop('disabled', true);
                }
            });
        }
    }

    if (this.idKey() !== '')
    {
        $var = this.idKey();
    }
    else
    {
        $var = '';
    }
    this.gridSearchVars('productoComplementario', '&noidproducto=' + $var);   

}
Producto.options = function () {   
    this.setActions('reporteConsumoPromedioProductos', {
        layerHeight: 356,
        WindowWidth: 420,
        WindowHeight: 300,
        WindowTitle: 'Consumo Promedio de Productos',   
        initButtons: 'generar,print,cancel',
        layerEndOn: false,
        ableBackWindow: true
    });

    this.setActions('create', {
        WindowTitle: 'Crear Producto',
        initButtons: 'save,cancel',
        layerEndOn: false,
        ableBackWindow: true
    });
    this.setActions('update', {
        WindowTitle: 'Modificar Producto',
        initButtons: 'save,cancel,printProducto',
        layerEndOn: false,
        ableBackWindow: true
    });
    this.setActions('InventariarPorAlmacen', {
        WindowTitle: 'Inventariar por Almacen',
        WindowWidth: 900,
        WindowHeight: 500,
        initButtons: 'cancel',
        layerEndOn: false,
        ableBackWindow: true
    });
    this.setActions('Movimientos', {
        layerHeight: 356,
        WindowWidth: 1220,
        WindowHeight: 535,
        WindowTitle: 'Movimientos',
        initButtons: 'salir',
        layerEndOn: false,
        ableBackWindow: true
    });

    var options = {
        WindowName: this.nameView,
        WindowTitle: 'Producto',
        WindowWidth: 1140,
        WindowHeight: 550,
        WindowInitFunction: '',
        WindowCloseFunction: '',
        WindowMaxFunction: '',
        WindowMinFunction: '',
        WindowOnBackground: true,
        typeLoading: 'on'// on,off,onMain
    };
    return options;
}

Producto.print=function(){   
    if (this.action === 'reporteConsumoPromedioProductos') {
        var datos = this.prepareSend($('#' + this.groupForm).serialize());
        var urlCompleta = 'reporteConsumoPromedioMeses?' + datos;
        this.openUrl(urlCompleta);
    }
}

Producto.beforeCreate = function () {
    Producto.idAlmacenSelec = $('#' + this.Id("codigoAlmacen")).val();
    var error = false;//false es no existe error antes de crear formulario
    return error;
}
Producto.afterCreate = function () {
//    Producto.reload();
    Producto.closeWindow();
}

Producto.beforeUpdate = function () {
    this.habilitarTodo();
    
    //Producto.copiarInformacion();
    
    var error = false;//false es no existe error antes de actulizar formulario
    return error;
}
Producto.afterUpdate = function () {
    Producto.closeWindow();
}

/*
 * Genera el codigo de un producto y asigna al campo 
 */
Producto.generarCodigo = function () {
    var codigoAlmacen = $('#' + this.Id("codigoAlmacen")).val();
    var valor = $('#' + this.Id("valor")).val();
    var codigoFamilia = $('#' + this.Id("codigoFamilia")).val();
    var codigoClase = $('#' + this.Id("codigoClase")).val();
    var codigo = "";
    if (codigoAlmacen) {
        if (codigoFamilia) {
            if (codigoClase) {
                if (valor) {
                    valor = this.calcularValor(valor);
                }
            } else {
                valor = "";
            }
        } else {
            codigoClase = "";
            valor = "";
        }
        codigo = codigoAlmacen + codigoFamilia + codigoClase + valor;
    }
    $('#' + this.Id("codigo")).val(codigo);
}

/*
 * Genera el nombre de un producto y asigna al campo 
 */
Producto.generarNombre = function () {
    var valor = $('#' + this.Id("valor")).val().toUpperCase();
    var nombreFamilia = $('#' + this.Id("nombreCompletadoFamilia")).val();
    var nombreClase = $('#' + this.Id("nombreCompletadoClase")).val();
    var simbolo = $('#' + this.Id("idunidadpresentacion") + ' :selected').text();
    var nombre = "";
    if (nombreFamilia) {
        if (nombreClase) {
            if (!valor) {
                simbolo = "";
            }
        } else {
            valor = "";
            simbolo = "";
        }
        nombre = nombreFamilia + ' ' + nombreClase + ' ' + valor + ' ' + simbolo;
        $('#' + this.Id("nombre")).val(nombre);
    }
}

/*
 * Calcula el valor a utilizarse en el codigo 
 * @param valor Valor a tratarse
 * @return valor a asignarse al codigo 
 */
Producto.calcularValor = function (valor) {
    while (valor.length < 3)
        valor = '0' + valor;
    return valor;
}

/**
 * Setea informacion de Familia
 */
Producto.setInformacionFamilia = function (id, codigo, nombre) {
    $('#' + this.Id("idfamilia")).val(id);
    $('#' + this.Id("codigoFamilia")).val(codigo);
    $('#' + this.Id("nombreCompletadoFamilia")).val(nombre);
}

/**
 * Setea informacion de clase
 */
Producto.setInformacionClase = function (id, codigo, nombre) {
    $('#' + this.Id("idclase")).val(id);
    $('#' + this.Id("codigoClase")).val(codigo);
    $('#' + this.Id("nombreCompletadoClase")).val(nombre);
}

/* Habilita todos los los elementos pertenecientes a la clase clonnable-field-1
 * antes de enviar el formulario. Es necesario porque el si el campo esta 
 * deshabilitado no se envia su informaci√≥n.
 */
Producto.habilitarTodo = function () {
    $('.clonnable-field-1').prop('disabled', false);
    $('#' + this.Id("codigoAlmacen")).prop('disabled', false);
}
/**
 * Evento que se ejecuta al cerrar la ventana
 */
Producto.close = function () {
    Producto.idAlmacenSelec = "";
    $('#' + this.Id("codigoAlmacen")).val(Producto.idAlmacenSelec);
    if (Producto.correccion===true){
    admProductoDetallado.search();
}
}
/*
 * Cuando selecciona una fecha se limita la fecha fin
 * en la vista de imprimir reportes pendientes por fechas
 * @param {type} selectedDate
 * @param {type} options
 * @returns {undefined} 
 * */    
Producto.validarFechaInicio = function (selectedDate, options) {
    if (selectedDate !== "") {
        if ($('#' + Producto.Id("fechaFin")).datepicker("getDate") === null) {
            $('#' + Producto.Id("fechaFin")).datepicker("option", "maxDate", new Date());
        }
    }
    $('#' + Producto.Id("fechaFin")).datepicker("option", "minDate", selectedDate);
}

/**
* Cuando selecciona la fechya se limita la fecha de inicio
* En la vista para imprimir reporte de √≥rdenes pendietes por fechas
 * @param {type} selectedDate
 * @param {type} options
 * @returns {undefined} */
Producto.validarFechaFin = function (selectedDate, options) {
    if (selectedDate === "") {
        $('#' + Producto.Id("fechaInicio")).datepicker("option", "maxDate", new Date());
    }

    else {
        $('#' + Producto.Id("fechaInicio")).datepicker("option", "maxDate", selectedDate);
    }
}
/**
 * Abre la ventana para escojer el producto y las fechas para generar el reporte 'Consumo Promedio de Productos'
 */
Producto.ventanaReporteConsumoPromedioProductos= function () {
    Producto.action='reporteConsumoPromedioProductos';
    Producto.open(Producto.getOptions());
};
/**
 * Este Metodo es invocado una vez que el autocomplete se cierra al buscar un producto en la ventana del reporte de consumo por meses
 * @param integer idProducto
 * @param string nombreProducto
 * @param string codigoProducto
 */
Producto.setInformacionProductoSearch=function(idProducto,nombreProducto,codigoProducto){    
    $('#' + this.Id("id")).val(idProducto);    
    $('#' + this.Id("nombre")).val(nombreProducto);
    $('#' + this.Id("codigo")).val(codigoProducto);
}
/**
 * Este Metodo es invocado una vez que el autocomplete se cierra al buscar un producto en la ventana del reporte de consumo por meses
 * @param integer idProducto
 * @param string nombreProducto
 * @param string codigoProducto
 */
Producto.setInformacionProductoCodigoSearch=function(idProducto,nombreProducto,codigoProducto){    
    $('#' + this.Id("id")).val(idProducto);    
    $('#' + this.Id("nombre")).val(nombreProducto);
    $('#' + this.Id("codigo")).val(codigoProducto);
}

Producto.inventariarxalm = function () {    
    this.action = 'InventariarPorAlmacen';
    this.open(this.getOptions());
};

Producto.cargarProductos = function (valor,scenario, idalmacen) {
    var THIS = this;
    var container = 'productos';
    var data = '';
    var url = '';
    switch (scenario) {
        case 'codigo':
            url = this.urlIni + this.url + '/loadProductosInventariarCodigo';
            data = '&codigo=' + valor + '&idalmacen=' + idalmacen + '&groupForm=' + this.groupForm;
            break;
        case 'nombre':
            url = this.urlIni + this.url + '/loadProductosInventariarNombre';
            data = '&nombre=' + valor + '&idalmacen=' + idalmacen + '&groupForm=' + this.groupForm;
            break;
    }
    SystemLoad.start();
    jQuery.ajax({
        url: url,
        type: 'get',
        data: data,
        success: function (data) {
            SystemLoad.done();
            THIS.ById(container).innerHTML = data;
            THIS.runScriptAjax(data);
        },
        error: function (jqXHR, status) {
            SystemLoad.done();
            alert('error! ');
        }
    });
};

Producto.SeleccionarTodos = function (idalmacen) {
    var url = this.urlIni + 'producto/SeleccionarTodos';
    var variables = 'idalmacen=' + idalmacen;
    $.ajax({
        url: url,
        data: variables,
        success: function (data, textStatus, jqXHR) {
            Producto.showMessage('Se seleccion√≥ todos los productos');
            Producto.reload();
        },
        error: function (jqXHR, textStatus, errorThrown) {
            Producto.showMessageError('Ocurrio un error');
        }
    });
};

Producto.QuitarSeleccion = function (idalmacen) {
    var url = this.urlIni + 'producto/QuitarSeleccion';
    var variables = 'idalmacen=' + idalmacen;
    $.ajax({
        url: url,
        data: variables,
        success: function (data, textStatus, jqXHR) {
            Producto.showMessage('Se quit√≥ la selecci√≥n de todos los productos');
            Producto.reload();
        },
        error: function (jqXHR, textStatus, errorThrown) {
            Producto.showMessageError('Ocurrio un error');
        }
    });
};

Producto.Inventariar = function (checked) {
    var grid = this.getSGridView('Inventariarproductos');
    var url = this.urlIni + 'producto/inventariar';
    var variables = 'bandera=' + (checked ? 1 : 0) + '&idproducto=' + grid.rowSelected().get('id');

    $.ajax({
        url: url,
        data: variables,
        success: function (data, textStatus, jqXHR) {
            Producto.showMessage('Selecci√≥n correcta');
        },
        error: function (jqXHR, textStatus, errorThrown) {
            Producto.showMessageError('Ocurrio un error');
        }
    });
};

Producto.agregarfilaabajo=function() {
    var grid = this.getSGridView('Productocaracteristica');
    grid.addRow(1, grid.rowSelected().number);
}

Producto.actualizaCaracteristicas = function(idAlmacen) {
    var url = this.urlIni+this.url+'/loadCaracteristicas';
    var THIS = this;
    var data = 'idAlmacen=' + idAlmacen + '&groupForm=' + this.groupForm;
    var container = 'divDetallePago';

    SystemLoad.start();
    jQuery.ajax({
        url: url, 
        type:'get',
        data:data,
        success: function (data) {
           SystemLoad.done();
           THIS.ById(container).innerHTML = data;
           THIS.runScriptAjax(data);
           THIS.init();
        },
        error: function (jqXHR, status) {  
            SystemLoad.done();
            alert('error! ');
        }
    });
}

Producto.copiarInformacion = function() {
    var grid = this.getSGridView('Productocaracteristica');
        
    if (grid.rowSelected().isFocus('valor'))
    {
        var valor = grid.rowSelected().get('valor');
        var valorOculto = grid.rowSelected().get('valorOculto');
        
        if(valor != valorOculto)
            grid.rowSelected().set('enviar', '1'); 
    }
}

Producto.Movimientos = function(options) {
    this.action = 'Movimientos';
    this.open(this.getOptions(options));
};

Producto.corregirUnMovimiento = function() {
    var grid = Producto.getSGridView('ProductonotaValorado');
    var id = grid.rowSelected().get('id');
    var saldoCantidadCorrecto = grid.rowSelected().get('saldoCantidadCorrecto');
    var saldoImporteCorrecto = grid.rowSelected().get('saldoImporteCorrecto');
    
    $.ajax({
        url: this.urlIni + 'producto/corregirMovimiento',
        method: 'get',
        data:
        {
            idnota: id,
            saldoCantidadCorrecto: saldoCantidadCorrecto,
            saldoImporteCorrecto: saldoImporteCorrecto,
        }
    }).done(function(data) {
        var result = data.split('*');
        var contadorSaldoCantidadErrores = result[1];
        var contadorSaldoCantidadNegativos = result[2];
        var contadorSaldoImporteErrores = result[3];
        var contadorSaldoImporteNegativos = result[4];
        if(result[0] == 1)
        {
            grid.rowSelected().set('saldo', saldoCantidadCorrecto);
            grid.rowSelected().attributes('saldo', {'style': {'background': '#d8e4bc', 'color': 'black'}});
            
            grid.rowSelected().set('saldoimporte', saldoImporteCorrecto);
            grid.rowSelected().attributes('saldoimporte', {'style': {'background': '#d8e4bc', 'color': 'black'}});
            
            $('#' + Producto.Id('lblInformacion')).html(
                '<div class="column">' +
                    '<label style="color: #880707; font-size: 15px;">ERRORES DE SALDO: ' + contadorSaldoCantidadErrores + '</label>' +
                    '<label style="color: #880707; font-size: 15px;">SALDO(S) NEGATIVOS: ' + contadorSaldoCantidadNegativos + '</label>' + 
                '</div>' + 
                '<div class="column" style="width: 20px;">' +
                    '<label style="color: transparent;">.</label>' +
                '</div>' + 
                '<div class="column">' +
                    '<label style="color: #880707; font-size: 15px;">ERRORES SALDO IMPORTE: ' + contadorSaldoImporteErrores + '</label>' +
                    '<label style="color: #880707; font-size: 15px;">SALDO(S) IMPORTE(S) NEGATIVO(S): ' + contadorSaldoImporteNegativos + '</label>' +
                '</div>'
            );
            Producto.correccion=true;
//            admProductoDetallado.search();
        }
    });
}

Producto.corregirVariosMovimientos = function() {
    var grid = Producto.getSGridView('ProductonotaValorado');
    var idNota = grid.rowSelected().get('idnota');
    var idProducto = Producto.get('id');
    $('#' + Producto.Id('imagenLoading')).show();
    $.ajax({
        url: this.urlIni + 'producto/corregirVariosMovimientos',
        method: 'get',
        data:
        {
            idProducto: idProducto,
            idNota: idNota,
            gestionSchemaMain:this.gestionSchemaMain(false),
        }
    }).done(function(data) {
        $('#' + Producto.Id('imagenLoading')).hide();
        Producto.showMessage('Se ha corregido correctamente! ');
        admProductoDetallado.search();
        Producto.reload();
    });
}

Producto.cargarProductoNota = function() {
    var fechaInicio = $('#' + Producto.Id('fechaInicio')).val();
    var fechaFin = $('#' + Producto.Id('fechaFin')).val();
    var idproducto = Producto.get('id');
    
    $('#imagenLoading').show();
    var url = this.urlIni+this.url+'/loadProductoNota';
    var THIS = this;
    var data =  'idproducto=' + idproducto + 
                '&fechaInicio=' + fechaInicio +
                '&fechaFin=' + fechaFin + 
                '&groupForm=' + this.groupForm;
    var container = 'divProductoNotaDetallado';

    SystemLoad.start();
    jQuery.ajax({
        url: url, 
        type:'get',
        data:data,
        success: function (data) {
           SystemLoad.done();
          THIS.ById(container).innerHTML=data;
          THIS.runScriptAjax(data);
          $('#imagenLoading').hide();
        },
        error: function (jqXHR, status) {  
           SystemLoad.done();
            alert('error! ');
        }
    });
};

Producto.cambiarMovimiento = function() {
    bootbox.confirm('Desea cambiar movimiento? ', function (confirmed) {
        if (confirmed) {
            Producto.cambiarMovimientoUpdate();
        }
    });
}

Producto.cambiarMovimientoUpdate = function() {
    var grid = Producto.getSGridView('ProductonotaValorado');
    var idNota = grid.rowSelected().get('idnota');
    var idProducto = Producto.get('id');
    var ingreso = grid.rowSelected().get('ingreso');
    var salida = grid.rowSelected().get('salida');
    var debe = grid.rowSelected().get('ingresoimporte');
    var haber = grid.rowSelected().get('salidaimporte');
    $('#' + Producto.Id('imagenLoading')).show();
    $.ajax({
        url: this.urlIni + 'producto/CambiarMovimiento',
        method: 'get',
        data:
        {
            idProducto: idProducto,
            idNota: idNota,
            ingreso: ingreso,
            salida: salida,
            debe: debe,
            haber: haber,
            gestionSchemaMain:this.gestionSchemaMain(false),
        }
    }).done(function(data) {    
        if(data == 1)
        {
            $('#' + Producto.Id('imagenLoading')).hide();
            Producto.showMessage('Se ha cambiado el movimiento correctamente! ');
            admProductoDetallado.search();
            Producto.reload();
        }
        else
            alert(data);
    });
}

Producto.printProducto = function() {
    var url = 'reporteProductoDetalle?id=' + this.idKey();
    this.openUrl(url);
}


// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
Producto.mostrarRequisitos = function(aumentarColumna) {
    var requisito = this.get('requisito');
    
    if(requisito == 0) // NO
        $('#' + Producto.Id('aumentarColumna')).attr('disabled', false);
    else // SI
    {
        $('#' + Producto.Id('aumentarColumna')).attr('checked', false);
        $('#' + Producto.Id('aumentarColumna')).attr('disabled', true);
    }
    var url = this.urlIni+this.url+'/MostrarRequisitos';
    var THIS = this;
    var container = 'divRequisitos';

    SystemLoad.start();
    jQuery.ajax({
        url: url, 
        type:'get',
        data:{
                idproducto: Producto.get('id_producto'),
                requisito: requisito,
                aumentarColumna: aumentarColumna,
                groupForm: this.groupForm
            },
        success: function (data) {
            SystemLoad.done();
            THIS.ById(container).innerHTML = data;
            THIS.runScriptAjax(data);    
        },
        error: function (jqXHR, status) {
            SystemLoad.done();
            alert('error! ');
        }
    });
}
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
Producto.excelConsumo = function() {
     var datos = this.prepareSend($('#' + this.groupForm).serialize()) + this.gestionSchemaMain();
   
    this.downloadFile(this.urlIni+this.url+'/descargarExcelConsumo?' + datos);
    this.showMessageError('Se inicio la descarga del reporte ...');
};