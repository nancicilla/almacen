<?php

/**
 * This is the model class for table "estado".
 *
 * The followings are the available columns in table 'estado':
 * @property integer $id
 * @property string $nombre
 *
 * The followings are the available model relations:
 * @property Inventario[] $inventarios
 */
class Estado extends CActiveRecord {

    var $idEstadoIniciado = 1;
    var $idEstadoCerrado = 2;
    var $idEstadoFinalizado = 3;
    var $idEstadoAnulado = 4;

    /**
     * @return string the associated database table name
     */
    public function tableName() {
        return 'estado';
    }

    /**
     * @return array validation rules for model attributes.
     */
    public function rules() {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('nombre', 'length', 'max' => 20),
            // The following rule is used by search().
            // @todo Please remove those attributes that should not be searched.
            array('id, nombre', 'safe', 'on' => 'search'),
        );
    }

    /**
     * @return array relational rules.
     */
    public function relations() {
        // NOTE: you may need to adjust the relation name and the related
        // class name for the relations automatically generated below.
        return array(
            'inventarios' => array(self::HAS_MANY, 'Inventario', 'idestado'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'id' => 'ID',
            'nombre' => 'Nombre',
        );
    }

    /**
     * Retrieves a list of models based on the current search/filter conditions.
     *
     * Typical usecase:
     * - Initialize the model fields with values from filter form.
     * - Execute this method to get CActiveDataProvider instance which will filter
     * models according to data in model fields.
     * - Pass data provider to CGridView, CListView or any similar widget.
     *
     * @return CActiveDataProvider the data provider that can return the models
     * based on the search/filter conditions.
     */
    public function search() {
        // @todo Please modify the following code to remove attributes that should not be searched.

        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('t.eliminado', 0);


        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    /**
     * @return CDbConnection the database connection used for this class
     */
    public function getDbConnection() {
        return Yii::app()->almacen;
    }

    /**
     * Returns the static model of the specified AR class.
     * Please note that you should have this exact method in all your CActiveRecord descendants!
     * @param string $className active record class name.
     * @return Estado the static model class
     */
    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    /**
     *
     * Sentencias entes de ejecutar metodo save
     * Antes de guardar se cambia todos los campos  de tipo character
     * varying y text a mayÃºsculas
     * Si existe el campo fecha, este toma el valor de la fecha actual antes
     * de almacenarse
     * Si existe el campo usuario, toma el valor del usuario actual antes de
     * almacenarse
     * 
     */
    public function beforeSave() {
        $this->nombre = strtoupper($this->nombre);
        return parent::beforeSave();
    }

    public function getEstados() {
        return $this->findAll(array('order' => 'nombre'));
    }

    public function esEstadoInicio($idEstado) {
        if ($idEstado === $this->idEstadoIniciado) {
            return true;
        } else {
            return false;
        }
    }

    public function esEstadoCerrado($idEstado) {
        if ($idEstado === $this->idEstadoCerrado) {
            return true;
        } else {
            return false;
        }
    }

    public function esEstadoFinalizado($idEstado) {
        if ($idEstado === $this->idEstadoFinalizado) {
            return true;
        } else {
            return false;
        }
    }

    public function esEstadoAnulado($idEstado) {
        if ($idEstado === $this->idEstadoAnulado) {
            return true;
        } else {
            return false;
        }
    }

}
